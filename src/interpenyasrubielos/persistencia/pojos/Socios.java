package interpenyasrubielos.persistencia.pojos;
// Generated 30-jul-2012 12:52:26 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Socios generated by hbm2java
 */
@Entity
@Table(name="socios"
    ,catalog="rubielos"
)
public class Socios  implements java.io.Serializable {


     private Integer id;
     private Penyas penyas;
     private String nombre;
     private String direccion;
     private int telefono;
     private int ropa;
     private Date antiguedad;
     private String dni;
     private Set<RopaSocios> ropaSocioses = new HashSet<RopaSocios>(0);
     private Set<Pedidos> pedidoses = new HashSet<Pedidos>(0);

    public Socios() {
    }

	
    public Socios(Penyas penyas, String nombre, String direccion, int telefono, int ropa, Date antiguedad, String dni) {
        this.penyas = penyas;
        this.nombre = nombre;
        this.direccion = direccion;
        this.telefono = telefono;
        this.ropa = ropa;
        this.antiguedad = antiguedad;
        this.dni = dni;
    }
    public Socios(Penyas penyas, String nombre, String direccion, int telefono, int ropa, Date antiguedad, String dni, Set<RopaSocios> ropaSocioses, Set<Pedidos> pedidoses) {
       this.penyas = penyas;
       this.nombre = nombre;
       this.direccion = direccion;
       this.telefono = telefono;
       this.ropa = ropa;
       this.antiguedad = antiguedad;
       this.dni = dni;
       this.ropaSocioses = ropaSocioses;
       this.pedidoses = pedidoses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="penya", nullable=false)
    public Penyas getPenyas() {
        return this.penyas;
    }
    
    public void setPenyas(Penyas penyas) {
        this.penyas = penyas;
    }
    
    @Column(name="nombre", nullable=false, length=50)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    
    @Column(name="direccion", nullable=false, length=100)
    public String getDireccion() {
        return this.direccion;
    }
    
    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }
    
    @Column(name="telefono", nullable=false)
    public int getTelefono() {
        return this.telefono;
    }
    
    public void setTelefono(int telefono) {
        this.telefono = telefono;
    }
    
    @Column(name="ropa", nullable=false)
    public int getRopa() {
        return this.ropa;
    }
    
    public void setRopa(int ropa) {
        this.ropa = ropa;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="antiguedad", nullable=false, length=10)
    public Date getAntiguedad() {
        return this.antiguedad;
    }
    
    public void setAntiguedad(Date antiguedad) {
        this.antiguedad = antiguedad;
    }
    
    @Column(name="dni", nullable=false, length=10)
    public String getDni() {
        return this.dni;
    }
    
    public void setDni(String dni) {
        this.dni = dni;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="socios")
    public Set<RopaSocios> getRopaSocioses() {
        return this.ropaSocioses;
    }
    
    public void setRopaSocioses(Set<RopaSocios> ropaSocioses) {
        this.ropaSocioses = ropaSocioses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="socios")
    public Set<Pedidos> getPedidoses() {
        return this.pedidoses;
    }
    
    public void setPedidoses(Set<Pedidos> pedidoses) {
        this.pedidoses = pedidoses;
    }




}


