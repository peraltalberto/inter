/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interpenyasrubielos.asistente;

/**
 *
 * @author aperalta
 */
public abstract class AbstractPanelAsistente extends javax.swing.JPanel  {

    /**
     * Creates new form AbstractPanelAsistente
     */
    public AbstractPanelAsistente(EsqueletoAsistente parent) {
        initComponents();
        this.parent = parent;
    }
    public EsqueletoAsistente parent;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(java.awt.SystemColor.controlLtHighlight);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
/**
     * Boton Finalizar del asistente aplicado en el boton correspondiente
     * 
     * @return Array de objetos almazenados
     */
    public abstract Object onFinish();
    
    
    /**
     * Boton Siguinete del asistente aplicado al panel correspondiente
     * 
     * @return key del siguiente panel a cargar
     */
    public abstract String next();
    
    
    
    /**
     * boton Atras del asistenete aplicado al panel correspondiente
     * 
     * @return key del anterior panel a cargar
     */
    public abstract String back();
    
    
    
    
    /**
     * Acciones a realizar para cancelar el asistente.
     */
    public abstract void cancel();
    
    /**
     * Estado de visualizacion de los botones del asistente
     * 
     * @return Array de boleanos con el estado de los botones orden 0 back, 1 next , 2 finish, 3 cancel
     */
    public abstract boolean[] visualBotones();
    
    public abstract String getInfo();
    public abstract String getStep();
    
    public abstract void onFocus();
}
