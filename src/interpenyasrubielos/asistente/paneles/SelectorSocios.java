/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interpenyasrubielos.asistente.paneles;

import interpenyasrubielos.InterpenyasRubielos;
import interpenyasrubielos.asistente.AbstractPanelAsistente;
import interpenyasrubielos.asistente.EsqueletoAsistente;
import interpenyasrubielos.persistencia.pojos.Pedidos;
import interpenyasrubielos.persistencia.pojos.Socios;
import java.util.ArrayList;
import java.util.Date;



/**
 *
 * @author aperalta
 */
public class SelectorSocios extends AbstractPanelAsistente{

    
    int opcion = 1;
    
    
    /**
     * Creates new form SelectorInspector
     */
    public SelectorSocios(EsqueletoAsistente parent) {
        
        super(parent);
        initComponents();
        
    }

   
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        dosLists1 = new es.timmp.components.DosLists();
        jLabel3 = new javax.swing.JLabel();

        setBackground(java.awt.SystemColor.controlLtHighlight);

        jLabel3.setText("Seleccione los socios a los que desea aplicar el anterior pedido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dosLists1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(dosLists1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private es.timmp.components.DosLists dosLists1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object onFinish() {
        System.out.println("En Onfinish");
        ArrayList<Socios> sociosL = (ArrayList<Socios>) this.dosLists1.getSelectedElements();
        for(int i = 0; i<sociosL.size(); i++){
            System.out.println("Socios: "+sociosL.get(i));
            Pedidos pedido = new Pedidos();
            System.out.println(pedido.getId());
            pedido.setFecha((Date)this.parent.getResultado().get("fecha"));
            pedido.setImporte((Double)this.parent.getResultado().get("importe"));
            pedido.setEntregado(0);
            pedido.setPagado(0);
            pedido.setSocios(sociosL.get(i));
            InterpenyasRubielos.pm.saveDato(pedido);
        }
        return true;
    }

    @Override
    public String next() {
        
        throw new UnsupportedOperationException("Not supported yet.");
       
    }

    @Override
    public String back() {
        return "pedido";
    }

    @Override
    public void cancel() {
       this.parent.dispose();
    }

    @Override
    public boolean[] visualBotones() {
        boolean[] bt = {true,false,true,true};
        return bt;
    }

    @Override
    public String getInfo() {
       return "Seleccione los socios";
    }

    @Override
    public String getStep() {
       return "paso 2 de 2";
    }


    @Override
    public void onFocus() {
        this.dosLists1.addOrigen(InterpenyasRubielos.sm.getLista());
    }
}
